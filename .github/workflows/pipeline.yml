name: pipeline

on:
  push:
    branches:
      - main
      - develop

jobs:
  unit-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

  code-analisys:
    runs-on: ubuntu-latest
    needs: unit-test

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

  push-to-registry:
    runs-on: ubuntu-latest
    needs: code-analisys
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
        with:
          context: .

      - name: Setup AWS EKS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Get authentication token
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_HOST }}

      - name: Build Docker Image
        run: docker build -t fiap-patient .

      - name: Get Helm Chart version
        run: |
          version=$(helm show chart ./manifest/fiap-patient/ | grep "^version:" | awk '{print $2}')
          echo "Helm Chart version: $version"
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Create tag repository
        run:
          docker tag fiap-patient:latest "${{ secrets.ECR_HOST }}/fiap-patient:${{ env.VERSION }}"

      - name: Push Docker Image
        run: docker push ${{ secrets.ECR_HOST }}/fiap-patient:${{ env.VERSION }}

  deploy-Prod:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'
    environment:
      name: prod
    needs: push-to-registry
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get Helm Chart version
        run: |
          version=$(helm show chart ./manifest/fiap-patient/ | grep "^version:" | awk '{print $2}')
          echo "Helm Chart version: $version"
          echo "VERSION=$version" >> $GITHUB_ENV    

      - name: Setup AWS EKS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Configure kubectl
        run: aws eks update-kubeconfig --name health-med-cluster

      - name: Deploy to EKS using Helm
        run: |
          helm upgrade --install \
            fiap-patient \
            manifest/fiap-patient \
            --namespace default \
            --set image.repository=${{ secrets.ECR_HOST }}/fiap-patient \
            --set image.tag=${{ env.VERSION }}